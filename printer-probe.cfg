[cartographer]
canbus_uuid: 374cd4bf908b
speed: 40.  #   Z probing dive speed.
lift_speed: 25.  #   Z probing lift speed.
backlash_comp: 0.5  #   Backlash compensation distance for removing Z backlash before measuring the sensor response.
x_offset: 0.  #   X offset of cartographer from the nozzle.
y_offset: 21.1  #   Y offset of cartographer from the nozzle.
trigger_distance: 2.  #   cartographer trigger distance for homing.
trigger_dive_threshold: 1.5  #   Threshold for range vs dive mode probing. Beyond `trigger_distance + trigger_dive_threshold` a dive will be used.
trigger_hysteresis: 0.006  #   Hysteresis on trigger threshold for untriggering, as a percentage of the trigger threshold.
cal_nozzle_z: 0.1  #   Expected nozzle offset after completing manual Z offset calibration.
cal_floor: 0.1  #   Minimum z bound on sensor response measurement.
cal_ceil:5.  #   Maximum z bound on sensor response measurement.
cal_speed: 1.0  #   Speed while measuring response curve.
cal_move_speed: 10.  #   Speed while moving to position for response curve measurement.
default_model_name: default  #   Name of default cartographer model to load.
mesh_main_direction: x  #   Primary travel direction during mesh measurement.
#mesh_overscan: -1  #   Distance to use for direction changes at mesh line ends. Omit this setting and a default will be calculated from line spacing and available travel.
mesh_cluster_size: 1  #   Radius of mesh grid point clusters.
mesh_runs: 2  #   Number of passes to make during mesh scan.


[safe_z_home]
##  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin
##  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
home_xy_position:125.0,125.0
speed:450
z_hop: 5


# ## NPN and PNP proximity switch types can be set by jumper
# [probe]
# pin: ^EBBCan: PB6
# x_offset: 0
# y_offset: 0
# # z_offset: 0
# speed: 8.0
# lift_speed: 45
# samples: 3
# samples_result: median
# sample_retract_dist: 1.8
# samples_tolerance: 0.006
# samples_tolerance_retries: 3
# activate_gcode:
#     {% set PROBE_TEMP = 150 %}
#     {% set ACTUAL_TEMP = printer.extruder.temperature %}
#     {% set TARGET_TEMP = printer.extruder.target %}

#     {% if TARGET_TEMP > PROBE_TEMP %}
#         { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
#         SET_HEATER_TEMPERATURE HEATER=extruder TARGET={PROBE_TEMP}
#     {% endif %}
#     {% if ACTUAL_TEMP > PROBE_TEMP + 3 %}
#         { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, PROBE_TEMP)) }
#         {% if printer.extruder.temperature > PROBE_TEMP + 5 %}
#             COOL_MAX
#         {% endif %}
#         TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={PROBE_TEMP + 3}
#         COOL_STOP
#     {% endif %}

##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions
[quad_gantry_level]
gantry_corners:
    -60,-10
    310, 320
#  Probe points
points:
    50,25
    50,175
    200,175
    200,25
speed: 450
horizontal_move_z: 8
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

[bed_mesh]
speed: 450
horizontal_move_z: 10
mesh_min: 40, 40
mesh_max: 210,210
fade_start: 0.6
fade_end: 10.0
probe_count: 7,7 # Values should be odd, so one point is directly at bed center
algorithm: bicubic
# relative_reference_index: 17 # Update when changing probe_count, to ((x points * y points) - 1) / 2.
zero_reference_position: 125, 125
